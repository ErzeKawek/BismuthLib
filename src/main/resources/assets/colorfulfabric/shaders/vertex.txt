#version 120

varying out vec4 color;
varying out vec3 pos;
varying out vec2 uvAtlas;
varying out vec2 uvLight;
varying out vec4 fog;

//	// 4 Bytes in each int
//	uniform int colorSection[1458];
//	
//	// Section with 18 block side
//	int getIndex(int x, int y, int z) {
//		return z * 324 + y * 18 + x;
//	}
//	
//	vec3 getColorI(int x, int y, int z) {
//		int indexBig = getIndex(x, y, z);
//		int index = int(indexBig / 4);
//		int byte = indexBig - index * 4;
//		int value = int(mod(int(colorSection[indexBig] / (byte * 8)), 256));
//		float red = mod(int(value / 36), 6) / 5.0;
//		float green = mod(int(value / 6), 6) / 5.0;
//		float blue = mod(value, 6) / 5.0;
//		return vec3(red, green, blue);
//	}

//vec4 getColor(vec3 pos) {}

void main() {
	color = gl_Color;// * vec4(getColorI(0, 0, 0) * 0.5, 1.0);
	pos = (gl_Vertex.xyz + vec3(1.0, 1.0, 1.0)) / 32.0;
	uvAtlas = (gl_TextureMatrix[0] * gl_MultiTexCoord0).xy;
	uvLight = (gl_TextureMatrix[2] * gl_MultiTexCoord2).xy;
	gl_Position = gl_ModelViewProjectionMatrix * gl_Vertex;
	float depth = clamp((gl_Position.z - gl_Fog.start) * gl_Fog.scale, 0.0, 1.0);
	fog = vec4(gl_Fog.color.rgb, depth);
}

#version 430 core

in vec4 color;
in vec3 pos;
in vec2 uvAtlas;
in vec2 uvLight;
in vec4 fog;

layout(binding = 0) uniform sampler2D atlas;
layout(binding = 2) uniform sampler2D lightmap;

// 4 Bytes in each int; 1458 blocks
// uniform int colorSection[32];
layout(binding = 6) uniform sampler1D colorSection;

// Section with 18 block side
int getIndex(int x, int y, int z) {
	return z * 324 + y * 18 + x;
}

vec3 getColorI(int x, int y, int z) {
	int indexBig = getIndex(x, y, z);
	int index = int(indexBig / 4);
	int byte = indexBig - index * 4;
	return vec3(indexBig / 100.0, index / 100.0, byte / 4.0);
	// int value = int(texture(colorSection, index)[byte] * 255);
	// float red = mod(int(value / 36), 6) / 5.0;
	// float green = mod(int(value / 6), 6) / 5.0;
	// float blue = mod(value, 6) / 5.0;
	// return vec3(red, green, blue);
}

void main() {
	vec4 text = texture(atlas, uvAtlas);
	vec4 light = vec4(texture(lightmap, uvLight).rgb, 1);
	vec4 colorLight = vec4(getColorI(int(pos.x), int(pos.y), int(pos.z)), 1.0);//vec4(texture(blocklight, pos).rgb, 1.0);
	vec4 mixed = color * text;
	vec4 result = mixed * light * (colorLight + vec4(1.0));
	result = mix(result, fog, fog.a);
	result.a = mixed.a;
	gl_FragColor = result;
}
